/*
 * mc1.c
 *
 *  Created on: Nov 1, 2023
 *      Author: Lenovo
 */

#include "mc1.h"
#include "lcd.h"
#include "keypad.h"
#include "common_macros.h"
#include "TIMER1.h"
#include "uart.h"
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>


/**********************************************************************************
 * 									Macros
 **********************************************************************************/
#define MAX_WRONG_ENTITIES 		3
#define compare_value 			31250


/************************************************************************************
 *                                 Global variables                                 *
 ***********************************************************************************/
uint8 g_flag=0;
volatile uint8 g_sec=0;
uint8 password[6]={0};
uint8 repass[6]={0};

/************************************************************************************
 *                                Function body                                     *
 ***********************************************************************************/

/*
 *  Description : let the user enter the password
 */
void Enter_password(void)
{
	LCD_clearScreen();
	LCD_moveCursor(0,0);
	LCD_displayString("Enter pass: ");
	LCD_moveCursor(1,0);

}

void Renter_password(void)
{
	LCD_clearScreen();
	LCD_moveCursor(0,0);
	LCD_displayString("REnter pass: ");
	LCD_moveCursor(1,0);

}


/*
 * Description : send the password to MC2
 */
void Send_password(void)
{
	uint8 key=0,i;
	for(i=0;i<5;i++)
	{
		key=KEYPAD_getPressedKey();
		_delay_ms(500);
	 if ((key >= 0) && (key <= 9))
		{
		password[i]=key;
		 LCD_displayCharacter('*');
		}
	 else
	 {
		 i--;
	 }
	}
	password[i]='#';

}

void reSend_password(void)
{
	uint8 key=0,i;
	for(i=0;i<5;i++)
	{
		key=KEYPAD_getPressedKey();
		_delay_ms(500);

	 if ((key >= 0) && (key <= 9))
		{
		repass[i]=key;
		 LCD_displayCharacter('*');
		}
	 else
	 {
		 i--;
	 }
	}
	repass[i]='#';

}


/*
 * Description : check on the password if it matches to the password in EEPROM or not
 */
uint8 Check_password(void)
{
	uint8 byte=0;
	byte = UART_recieveByte();
	return byte;
}


/*
 * Description :  Description : when you enter a wrong password
 */
void Wrong_password(void)
{
	LCD_clearScreen();
	LCD_moveCursor(0,0);
	LCD_displayString("WRONG PASSWORD!");
	UART_sendByte(MAX_WRONG_ENTITIES);
	Timer1_wait(60);
}


/*
 * Description : to open the door
 */
void OPEN_door(void)
{
	LCD_clearScreen();
	LCD_moveCursor(0,0);

	/* wait until control ecu */
	while(UART_recieveByte() != 0);

	LCD_displayString("Door is Unlocking");
	Timer1_wait(15);
	LCD_clearScreen();
	Timer1_wait(3);
	LCD_clearScreen();
	LCD_displayString("Door is locking");
	Timer1_wait(15);
	LCD_clearScreen();
}


/*
 * Description : to increment the timer
 */
void Timer1_Inc(void)
{
	g_sec++;
}


/*
 * Description : to wait the time needed
 */
void Timer1_wait(uint8 time)
{
	g_sec=0;
	if (g_sec < time)
	{
		/* wait */
	}
}

int main(void)
{
	uint8 key, false_count=0 , check_flag=0;
	/* Enable globaL interrupts*/
	SREG |= (1<<7);

	LCD_init();
	UART_ConfigType UART_Config ={UART_8_BITS,UART_PARITY_NONE,UART_STOP_1_BIT,UART_BAUD_9600,UART_ASYNCH,ON};

	UART_init(&UART_Config);
	Timer1_ConfigType Timer_Config = {compare,0,compare_value,clk_256}; /* initialize Timer driver*/
	Timer1_init(&Timer_Config);
	Timer1_setCallBack(Timer1_Inc);



	while(1)
	{
		if( g_flag == 0)
		{ /* password not set */
			Enter_password();
			Send_password();
			key=KEYPAD_getPressedKey();
			_delay_ms(500);

			while(key!='=')
			{
				key=KEYPAD_getPressedKey();
				_delay_ms(500);

			}
			UART_sendString(password);


			Renter_password();
			reSend_password();
			key=KEYPAD_getPressedKey();
			_delay_ms(500);

			while(key!='=')
			{
				key=KEYPAD_getPressedKey();
				_delay_ms(500);

			}
			UART_sendString(repass);


			/* check the password matched or not */
			g_flag=Check_password();
		}
		else if (g_flag == 1)
		{ /* password is set*/
			LCD_clearScreen();
			LCD_moveCursor(0,0);
			LCD_displayString("+ : open Door");
			LCD_moveCursor(1,0);
			LCD_displayString("- : change pass ");
			key = KEYPAD_getPressedKey();
			_delay_ms(500);
			switch(key)
			{
			case '+': /* open the door */
				check_flag=0;
				while(check_flag==0)
				{
					UART_sendByte(key); /*send the + to MC2 */
					Enter_password();
					check_flag=Check_password();
					if(check_flag == 1)
					{
						OPEN_door();
					}
					else
					{
						false_count++;
						/* send a wrong pass.*/
						UART_sendByte(false_count);
						if (false_count == MAX_WRONG_ENTITIES)
						{
							Wrong_password();
							break;
						}
					}
				}
				break;

				/* change password */
			case '-':
				/* send - to MC2 */
				UART_sendByte(key);
				/*password is not set */
				g_flag=0;
				break;
			}
		}
	}

	return 0;
}
